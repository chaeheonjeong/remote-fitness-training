/*
import React, { useEffect, useState } from 'react';
import './Write.css';


const Write = () => {
  
  async function handleSubmit(e) {
    e.preventDefault();
    await createPost();
  };


  return (

    <form onSubmit={handleSubmit}>
        
    <div className="write">
    <nav className={styles.navigation2}>
        <div className={styles.tagline}>
          <ul>
            <li>
              <div id='tag_button2'>
              <input type='button' value='공지' id='tag_button' className='notice' onClick={tagNameSet1}/>
              </div>
            </li>
              <li>
              <div id='tag_button2'>
              <input type='button' value='자유' id='tag_button' className='free' onClick={tagNameSet2}/>
              </div>
            </li>
            <li>
              <div id='tag_button2'>
              <input type='button' value='맛집' id='tag_button' className='rest' onClick={tagNameSet3}/>
              </div>
            </li>
            <li>
              <div id='tag_button2'>
              <input type='button' value='공모전' id='tag_button' className='contest' onClick={tagNameSet4}/>
              </div>
            </li>
          </ul>          
        </div>
      </nav>

      <div clssName>
        <input type='tag' id='tag_txt' name='title' placeholder='상단의 태그를 선택해주세요' value={tagName} disabled/>
      </div>
        <div>
          <input type='title' id='title_txt' name='title' placeholder='제목을 입력하세요' onChange={e => setPostInfo({...postInfo, title: e.target.value})}/>
        </div>

        <div className="ck1">
          <CKEditor
            editor={ClassicEditor}
            data=""
            config={{
              placeholder: "내용을 입력하세요.",
            }}
            onReady={(editor) => {
              // You can store the "editor" and use when it is needed.
              console.log('Editor is ready to use!', editor);
            }}
            onChange={(event, editor) => {
              const data = editor.getData();
              console.log({ event, editor, data });
              setPostInfo({
                ...postInfo,
                contents: data
              })
              console.log(postInfo);
            }}
    
            onBlur={(event, editor) => {
              console.log('Blur.', editor);
            }}
            onFocus={(event, editor) => {
              console.log('Focus.', editor);
            }}
          />
        </div>



 


        <div>
        <button className="postBtn btnPush" onClick={() => { setviewcontents(viewcontents.concat({...postInfo}))}}>포스트 등록</button>

      <button className="listBtn btnPush" 
      onClick={goList}>목록으로</button>
      </div>

      

    
            

           

  </div>
  </form>  
  );
}


export default Write;*/